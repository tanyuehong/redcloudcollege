<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redskt.classroom.mapper.RedInterviewAnswerMapper">

    <resultMap id="replyMap" type="com.redskt.classroom.entity.vo.RedClassAnswerVo">
        <id column="id" property="id"/>
        <id column="qid" property="qid"/>
        <id column="view" property="view"/>
        <id column="good" property="good"/>
        <id column="isgood" property="isgood"/>
        <id column="iscollect" property="iscollect"/>
        <id column="bad" property="bad"/>
        <id column="state" property="state"/>
        <id column="uid" property="uid"/>
        <id column="allcomment" property="allcomment"/>
        <id column="username" property="username"/>
        <id column="avatar" property="avatar"/>
        <id column="content" property="content"/>
        <id column="gmt_create" property="gmtCreate"/>
        <collection property="comments" resultMap="commentMap">
        </collection>
    </resultMap>

    <resultMap id="commentMap" type="com.redskt.classroom.entity.vo.ReplyCommentVo">
        <id column="replyId" property="id"/>
        <id column="ccontent" property="content"/>
        <id column="crid" property="rid"/>
        <id column="cuid" property="uid"/>
        <id column="touid" property="touid"/>
        <id column="cname" property="name"/>
        <id column="tname" property="toname"/>
        <id column="cavatar" property="avatar"/>
        <id column="cgood" property="good"/>
        <id column="goodcomment" property="goodcomment"/>
        <id column="cgmt_create" property="gmtCreate"/>
    </resultMap>

    <select id="getInterviewAnswerList" resultMap="replyMap">
        SELECT answer.id, answer.qid,answer.content,answer.view,answer.good,answer.bad,answer.uid,answer.state,answer.gmt_create, ruser.nickname as username,
        ruser.avatar, rcomment.id as replyId, rcomment.content as ccontent,rcomment.good as cgood,!isnull(agood.id) as isgood,!isnull(acollect.id) as iscollect,
        rcomment.rid as crid,rcomment.uid as cuid,rcomment.touid,rcomment.gmt_create as cgmt_create,cuser.nickname as cname,cuser.avatar as cavatar,tuser.nickname as tname
        FROM red_interview_answer answer
        LEFT JOIN red_class_user ruser on answer.uid = ruser.id
        LEFT JOIN (
        SELECT myc.id,myc.content,myc.good,myc.rid,myc.uid,myc.touid,myc.gmt_create
        FROM (
        SELECT * FROM  (
        SELECT ROW_NUMBER() OVER(PARTITION BY rid ORDER BY gmt_create DESC) rn ,red_interview_answer_comment.*
        FROM red_interview_answer_comment) t2 WHERE t2.rn &lt; #{csize}
        ) myc
        ORDER BY gmt_create DESC
        ) as rcomment on  rcomment.rid = answer.id
        LEFT JOIN  ( select  count(id) as allcomment,rid from red_interview_answer_comment where uid = #{uid} group  by rid )
        acomment on acomment.rid = answer.id
        LEFT JOIN red_class_user cuser on rcomment.uid = cuser.id
        LEFT JOIN red_class_user tuser on rcomment.touid = tuser.id
        <if test="uid != null">
            LEFT JOIN  ( select  id,aid from red_interview_answer_good where uid = #{uid} and is_deleted = 0)
            agood on agood.aid = answer.id
            LEFT JOIN  ( select  id,aid from red_interview_answer_collect where uid = #{uid} and is_deleted = 0)
            acollect on acollect.aid = answer.id
        </if>

        <if test="uid != null">

        </if>

        WHERE  answer.id in
        ( SELECT id FROM
        ( SELECT id
        FROM red_interview_answer
        WHERE qid = #{qId}
        <if test="type == 1">
            ORDER BY red_interview_answer.good DESC
        </if>
        <if test="type == 2">
            ORDER BY red_interview_answer.gmt_create DESC
        </if>
        LIMIT #{size} ) as subreply )
    </select>

    <select id="getUserLasterReply" resultMap="replyMap">
        SELECT  answer.id, answer.qid,answer.content,answer.good,answer.bad,answer.uid,answer.gmt_create, ruser.nickname as username,
        ruser.avatar
        FROM red_interview_answer answer
        LEFT JOIN red_class_user ruser on answer.uid = ruser.id
        WHERE  answer.id = #{qid}
    </select>


    <update id="addGoodCount">
        update red_interview_answer
        set good=good+1
        where id = #{aId}
    </update>

    <update id="prepGoodCount">
        update red_interview_answer
        set good=good-1
        where id = #{aId}
    </update>

    <update id="updateState">
        update red_interview_answer
        set state = #{state}
        where id = #{aid} and qid in
        (
           select id from (
            select question.id
            from red_interview_answer reply
            left join red_interview_question question on question.id = reply.qid
            WHERE reply.id = #{aid}
            ) b
        )
    </update>

</mapper>
