<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redskt.classroom.mapper.RedBlogDetailMapper">

    <select id="getGoodDetailList" resultType="com.redskt.classroom.entity.vo.RedClassBlogDetailVo">
        SELECT blog.id,blog.title,blog.descrb,blog.type,blog.good,blog.faver,blog.view_count,blog.price,auser.id as aUid,auser.nickName as authorName,auser.avatar as authorAvatar,auser.id as authorUid,cCount
        FROM red_blog_good good
        LEFT OUTER JOIN op_blog_detail blog ON blog.id = good.bid
        LEFT OUTER JOIN red_class_user auser ON auser.id = blog.auid
        LEFT OUTER JOIN (select bid,count(id) as cCount from red_blog_comment group by bid) comment on comment.bid = blog.id
        WHERE good.uid = #{uid}
        ORDER BY blog.gmt_modified DESC
        LIMIT #{size}
    </select>

    <select id="getCollectDetailList" resultType="com.redskt.classroom.entity.vo.RedClassBlogDetailVo">
        SELECT blog.id,blog.title,blog.descrb,blog.type,blog.good,blog.faver,blog.view_count,blog.price,auser.id as aUid,auser.nickName as authorName,auser.avatar as authorAvatar,auser.id as authorUid,cCount
        FROM red_blog_collect collect
        LEFT OUTER JOIN op_blog_detail blog ON blog.id = collect.bid
        LEFT OUTER JOIN red_class_user auser ON auser.id = blog.auid
        LEFT OUTER JOIN (select bid,count(id) as cCount from red_blog_comment group by bid) comment on comment.bid = blog.id
        WHERE collect.uid = #{uid} and collect.is_deleted = 0
        ORDER BY blog.gmt_modified DESC
        LIMIT #{size}
    </select>

    <select id="getRedBlogDetailList" resultType="com.redskt.classroom.entity.vo.RedClassBlogDetailVo">
        SELECT blog.id,blog.title,blog.descrb,blog.type,blog.good,blog.faver,blog.view_count,blog.price,auser.id as aUid,auser.nickName as authorName,auser.avatar as authorAvatar,auser.id as authorUid,cCount
        FROM op_blog_detail blog
        LEFT OUTER JOIN red_class_user auser ON auser.id = blog.auid
        LEFT OUTER JOIN (select bid,count(id) as cCount from red_blog_comment group by bid) comment on comment.bid = blog.id
        where  blog.state = 100 and blog.is_deleted = 0
        <if test="uid != null">
        and blog.auid = #{uid}
        </if>
        <if test="type == 1">
            ORDER BY blog.gmt_create DESC
        </if>
        <if test="type == 2">
            ORDER BY blog.hot DESC
        </if>
        <if test="type == 3">
            ORDER BY cCount DESC
        </if>
        LIMIT #{size}
    </select>

    <select id="getFocusBlogList" resultType="com.redskt.classroom.entity.vo.RedClassBlogDetailVo">
        SELECT blog.id,blog.title,blog.descrb,blog.type,blog.good,blog.faver,blog.view_count,blog.price,auser.id as aUid,auser.nickName as authorName,auser.avatar as authorAvatar,auser.id as authorUid,cCount
        FROM op_blog_detail blog
        LEFT OUTER JOIN red_class_user auser ON auser.id = blog.auid
        LEFT OUTER JOIN (select bid,count(id) as cCount from red_blog_comment group by bid) comment on comment.bid = blog.id
        LEFT OUTER JOIN red_blog_tags tag ON tag.bid   = blog.id
        LEFT OUTER JOIN red_user_focus focus ON blog.auid = focus.fid

        where focus.uid = #{uid} and focus.is_deleted = 0 and blog.state = 100

        <if test="sort == 1">
            ORDER BY blog.gmt_create DESC
        </if>
        <if test="sort == 2">
            ORDER BY blog.hot DESC
        </if>
        <if test="sort == 3">
            ORDER BY cCount DESC
        </if>
        LIMIT #{size}
    </select>

    <select id="getIndexBlogList" resultType="com.redskt.classroom.entity.vo.RedClassBlogDetailVo">
        SELECT blog.id,blog.title,blog.descrb,blog.type,blog.good,blog.faver,blog.view_count,blog.price,auser.id as aUid,auser.nickName as authorName,auser.avatar as authorAvatar,auser.id as authorUid,cCount
        FROM op_blog_detail blog
        LEFT OUTER JOIN red_class_user auser ON auser.id = blog.auid
        LEFT OUTER JOIN (select bid,count(id) as cCount from red_blog_comment group by bid) comment on comment.bid = blog.id
        LEFT OUTER JOIN red_blog_tags tag ON tag.bid   = blog.id
        LEFT OUTER JOIN red_blog_type otype ON otype.id = blog.tyid
        where  blog.state = 100
        <if test="tid != null">and tag.tid = #{tid}</if>
        <if test="type != null">and otype.type = #{type}</if>

        <if test="sort == 1">
            ORDER BY blog.gmt_create DESC
        </if>
        <if test="sort == 2">
            ORDER BY blog.hot DESC
        </if>
        <if test="sort == 3">
            ORDER BY cCount DESC
        </if>
        LIMIT #{size}
    </select>

    <select id="getRedClassBlogDetail" resultType="com.redskt.classroom.entity.vo.RedClassBlogDetailVo">
        SELECT blog.*,auser.id as aUid,auser.nickName as authorName,auser.avatar as authorAvatar,auser.id as authorUid
        FROM op_blog_detail blog
        LEFT OUTER JOIN red_class_user auser ON auser.id=blog.auid
        where blog.id = #{bid} and blog.state = 100
    </select>

    <select id="getBlogUserStatus" resultType="com.redskt.classroom.entity.vo.RedUserStateVo">
        SELECT !isnull(collect.id) as isCollect, !isnull(good.id) as goodslect,!isnull(blog.id) as isFocus
        FROM op_blog_detail blog
        LEFT OUTER JOIN  red_blog_collect collect on collect.uid = #{uid} and collect.bid = #{bid} and collect.is_deleted = 0
        LEFT OUTER JOIN  red_user_focus focus on focus.uid = #{uid} and focus.fid = blog.auid and focus.is_deleted = 0
        LEFT OUTER JOIN  red_blog_good  good  on good.uid = #{uid} and good.bid = #{bid}
        where blog.id = #{bid} and  blog.state = 100
    </select>

    <update id="addBlogGoodCount">
        update op_blog_detail
        set good=good+1
        where id = #{bid}
    </update>

    <update id="prepBlogGoodCount">
        update op_blog_detail
        set good=good-1
        where id = #{bid}
    </update>

    <update id="updateReadCount">
        update op_blog_detail
        set  view_count=view_count+1
        where id = #{bid}
    </update>

</mapper>
