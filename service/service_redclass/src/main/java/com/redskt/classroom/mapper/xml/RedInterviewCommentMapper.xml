<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redskt.classroom.mapper.RedInterviewCommentMapper">

    <resultMap id="commentMap" type="com.redskt.classroom.entity.vo.RedCommentVo">
        <id column="id" property="id"/>
        <id column="bid" property="bid"/>
        <id column="content" property="content"/>
        <id column="good" property="good"/>
        <id column="goodreply" property="goodreply"/>
        <id column="goodreply" property="goodreply"/>
        <id column="gmt_create" property="gmtCreate"/>
        <id column="uid" property="uid"/>
        <id column="username" property="username"/>
        <id column="avatar" property="avatar"/>
        <collection property="comments" resultMap="commentReplyMap">
        </collection>
    </resultMap>

    <resultMap id="commentReplyMap" type="com.redskt.classroom.entity.vo.RedCommentReplyVo">
        <id column="replyId" property="id"/>
        <id column="rcontent" property="content"/>
        <id column="rid" property="rid"/>
        <id column="cgood" property="good"/>
        <id column="goodr" property="goodreply"/>
        <id column="cuid" property="uid"/>
        <id column="touid" property="touid"/>
        <id column="cname" property="name"/>
        <id column="tname" property="toname"/>
        <id column="cavatar" property="avatar"/>
        <id column="goodcomment" property="goodcomment"/>
        <id column="cgmt_create" property="gmtCreate"/>
    </resultMap>

    <select id="getRedCommentList" resultMap="commentMap">
        SELECT comment.id,comment.bid,comment.content,comment.gmt_create,comment.good,!isnull(cgood.id) as goodreply,
        ruser.id as uid,ruser.nickname as username,ruser.avatar,
        rcomment.id as replyId,rcomment.content as rcontent, rcomment.rid, rcomment.good as cgood,rcomment.gmt_create as cgmt_create,rcomment.goodr,
        rcomment.uid as cuid,cuser.nickname as cname,cuser.avatar as cavatar,
        rcomment.touid as touid,tuser.nickname as tname,!isnull(cgood.id) as goodreply

        FROM red_interview_comment comment
        LEFT JOIN red_class_user ruser on comment.uid = ruser.id
        LEFT JOIN (
        SELECT myc.id,myc.content,myc.good,myc.rid,myc.uid,myc.touid,myc.gmt_create,!isnull(rgood.id) as goodr
        FROM (
        SELECT * FROM  (
        SELECT ROW_NUMBER() OVER(PARTITION BY rid ORDER BY gmt_create DESC) rn ,red_interview_comment_reply.*
        FROM red_interview_comment_reply) t2 WHERE t2.rn &lt; #{rSize}
        ) myc
        LEFT JOIN red_interview_comment_good rgood on myc.uid = rgood.uid and myc.id = rgood.cid and rgood.gtype = 2 and rgood.is_deleted = 0
        ORDER BY gmt_create,goodr DESC
        ) as rcomment on  rcomment.rid =comment.id

        LEFT JOIN red_interview_comment_good cgood on comment.id = cgood.cid and cgood.gtype = 0 and cgood.uid = #{uid} and cgood.is_deleted = 0
        LEFT JOIN red_class_user cuser on rcomment.uid = cuser.id
        LEFT JOIN red_class_user tuser on rcomment.touid = tuser.id

        WHERE comment.id in
        ( SELECT id FROM
        ( SELECT id
        FROM red_interview_comment
        WHERE bid = #{id}
        <if test="type == 1">
            ORDER BY good DESC
        </if>
        <if test="type == 2">
            ORDER BY red_interview_comment.gmt_create DESC
        </if>
        LIMIT #{size} ) as subreply )
        <if test="type == 1">
            ORDER BY good DESC
        </if>
        <if test="type == 2">
            ORDER BY gmt_create DESC
        </if>
    </select>

    <select id="getCommentOne" resultMap="commentMap">
        SELECT comment.id,comment.bid,comment.content,comment.gmt_create,
        ruser.id as uid,ruser.nickname as username,ruser.avatar
        FROM red_interview_comment comment
        LEFT JOIN red_class_user ruser on comment.uid = ruser.id
        WHERE  comment.id = #{cid}
    </select>


    <update id="addGoodCount">
        update red_interview_comment
        set good=good+1
        where id = #{cId}
    </update>

    <update id="prepGoodCount">
        update red_interview_comment
        set good=good-1
        where id = #{cId}
    </update>

</mapper>
