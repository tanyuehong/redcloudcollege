<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.redskt.classroom.mapper.RedUserMapper">

    <select id="getShowUserInfo" resultType="com.redskt.classroom.entity.vo.RedClassUserVo">
        SELECT eduser.id,eduser.username,eduser.nickname,eduser.sex,eduser.age,eduser.sign,eduser.avatar,eduser.position,
        eduser.perpage,eduser.company,eduser.perintroduction,eduser.gmt_create,eduser.practice,count(focus.id) as focus,count(mfocus.id) as mfocus,
        sum(blog.view_count) as viewsum,sum(blog.good) as bgoodsum
        FROM edu_user eduser
        LEFT OUTER JOIN red_user_focus focus ON eduser.id=focus.fid and focus.is_deleted = 0
        LEFT OUTER JOIN red_user_focus mfocus ON eduser.id=mfocus.uid and mfocus.is_deleted = 0
        LEFT OUTER JOIN op_blog_detail blog ON eduser.id=blog.auid
        where eduser.id = #{uid}
    </select>

    <select id="getUserAskInfo" resultType="com.redskt.classroom.entity.vo.RedUserAskVo">
        SELECT eduser.id,
         (SELECT count(reply.id)
          FROM  red_ask_reply reply
          WHERE reply.uid = #{uid} and reply.state = 1
        ) as aDopt,(SELECT count(askq.id)
          FROM  edu_user_ask askq
          WHERE askq.uid = #{uid}
        ) as qCount,
        (SELECT count(qqgood.id)
          FROM  edu_user_ask askq
          LEFT OUTER JOIN  red_qustion_good qqgood on qqgood.qid = askq.id
          WHERE askq.uid = #{uid}
        ) as qGood,
         (SELECT count(rrgood.id)
          FROM  red_ask_reply reply
          LEFT OUTER JOIN  red_reply_good rrgood on rrgood.rid = reply.id
          WHERE reply.uid = #{uid}
        ) as rGood,
        (SELECT count(ccgood.id)
          FROM  red_ask_reply_comment comment
          LEFT OUTER JOIN  red_reply_comment_good ccgood on ccgood.cid = comment.id
          WHERE comment.uid = #{uid}
        ) as cGood,
         (SELECT count(reply.id)
          FROM  red_ask_reply reply
          WHERE reply.uid = #{uid}
        ) as qAnswer,
        (SELECT count(comment.id)
          FROM  red_ask_reply reply
          LEFT OUTER JOIN  red_ask_reply_comment comment on comment.rid = reply.id and comment.touid = null
          WHERE reply.uid = #{uid}
        ) as cComment,
         (SELECT count(comment.id)
          FROM  red_ask_reply_comment comment
          WHERE comment.touid = #{uid}
        ) as crComment
        FROM edu_user eduser
        where eduser.id = #{uid}
    </select>

    <select id="getUserInfoFocusCount" resultType="com.redskt.classroom.entity.vo.RedClassUserVo">
        SELECT eduser.*,count(focus.id) as focus
        FROM edu_user eduser
        LEFT OUTER JOIN red_user_focus focus ON eduser.id=focus.fid and focus.is_deleted = 0
        where eduser.id = #{uid}
    </select>

    <update id="updateUserInfo" parameterType="map">
        update edu_user
        set
        <foreach collection="map" item="val" index="key" separator=",">
            ${key} =  #{val}
        </foreach>
        where id = #{id}
    </update>

    <update id="changeUserPwd" parameterType="map">
        update edu_user
        set
        <foreach collection="map" item="val" index="key" separator=",">
            ${key} =  #{val}
        </foreach>
        where id = #{id} and password = #{oldPwd}
    </update>
</mapper>
